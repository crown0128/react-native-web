import { PropTypes } from 'react'

const { number, oneOf, oneOfType, string } = PropTypes
const numberOrString = oneOfType([ number, string ])

/**
 * Any properties marked @private are used internally in resets or property
 * mappings.
 *
 * https://developer.mozilla.org/en-US/docs/Web/CSS/Reference
 */
export default {
  alignContent: oneOf([ 'center', 'flex-end', 'flex-start', 'space-around', 'space-between', 'stretch' ]),
  alignItems: oneOf([ 'baseline', 'center', 'flex-end', 'flex-start', 'stretch' ]),
  alignSelf: oneOf([ 'auto', 'baseline', 'center', 'flex-end', 'flex-start', 'stretch' ]),
  appearance: string,
  backfaceVisibility: string,
  backgroundAttachment: oneOf([ 'fixed', 'local', 'scroll' ]),
  backgroundClip: string,
  backgroundColor: string,
  backgroundImage: string,
  backgroundOrigin: oneOf([ 'border-box', 'content-box', 'padding-box' ]),
  backgroundPosition: string,
  backgroundRepeat: string,
  backgroundSize: string,
  borderColor: string,
  borderBottomColor: string,
  borderLeftColor: string,
  borderRightColor: string,
  borderTopColor: string,
  borderRadius: numberOrString,
  borderTopLeftRadius: numberOrString,
  borderTopRightRadius: numberOrString,
  borderBottomLeftRadius: numberOrString,
  borderBottomRightRadius: numberOrString,
  borderStyle: string,
  borderBottomStyle: string,
  borderLeftStyle: string,
  borderRightStyle: string,
  borderTopStyle: string,
  borderWidth: numberOrString,
  borderBottomWidth: numberOrString,
  borderLeftWidth: numberOrString,
  borderRightWidth: numberOrString,
  borderTopWidth: numberOrString,
  bottom: numberOrString,
  boxShadow: string,
  boxSizing: oneOf([ 'border-box', 'content-box' ]),
  clear: string,
  color: string,
  cursor: string,
  display: string,
  direction: string, /* @private */
  flex: number,
  flexBasis: string,
  flexDirection: oneOf([ 'column', 'column-reverse', 'row', 'row-reverse' ]),
  flexGrow: number,
  flexShrink: number,
  flexWrap: oneOf([ 'nowrap', 'wrap', 'wrap-reverse' ]),
  float: oneOf([ 'left', 'none', 'right' ]),
  font: string, /* @private */
  fontFamily: string,
  fontSize: numberOrString,
  fontStyle: string,
  fontWeight: string,
  height: numberOrString,
  justifyContent: oneOf([ 'center', 'flex-end', 'flex-start', 'space-around', 'space-between' ]),
  left: numberOrString,
  letterSpacing: string,
  lineHeight: numberOrString,
  listStyle: string,
  margin: numberOrString,
  marginBottom: numberOrString,
  marginHorizontal: numberOrString,
  marginLeft: numberOrString,
  marginRight: numberOrString,
  marginTop: numberOrString,
  marginVertical: numberOrString,
  maxHeight: numberOrString,
  maxWidth: numberOrString,
  minHeight: numberOrString,
  minWidth: numberOrString,
  opacity: numberOrString,
  order: numberOrString,
  outline: string,
  overflow: string,
  overflowX: string,
  overflowY: string,
  padding: numberOrString,
  paddingBottom: numberOrString,
  paddingHorizontal: numberOrString,
  paddingLeft: numberOrString,
  paddingRight: numberOrString,
  paddingTop: numberOrString,
  paddingVertical: numberOrString,
  position: oneOf([ 'absolute', 'fixed', 'relative', 'static' ]),
  right: numberOrString,
  textAlign: oneOf([ 'center', 'justify', 'justify-all', 'left', 'right' ]),
  textDecoration: string,
  textOverflow: string,
  textShadow: string,
  textTransform: oneOf([ 'capitalize', 'lowercase', 'none', 'uppercase' ]),
  top: numberOrString,
  userSelect: string,
  verticalAlign: string,
  visibility: oneOf([ 'hidden', 'visible' ]),
  whiteSpace: string,
  width: numberOrString,
  wordWrap: string,
  writingDirection: string,
  zIndex: numberOrString
}
